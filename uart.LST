C51 COMPILER V6.02  UART                                                                   05/12/2016 12:39:14 PAGE 1   


C51 COMPILER V6.02, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\uart.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\uart.c DEBUG OBJECTEXTEND

stmt level    source

   1          /***********************************************************************
   2          MODULE:    UART
   3          VERSION:   1.04
   4          CONTAINS:  Routines for controlling the UART peripheral on the Philips
   5                     P89LPC932A1
   6          COPYRIGHT: Embedded Systems Academy, Inc. - www.esacademy.com
   7          LICENSE:   May be freely used in commercial and non-commercial code
   8                     without royalties provided this copyright notice remains
   9                     in this file and unaltered
  10          WARNING:   IF THIS FILE IS REGENERATED BY CODE ARCHITECT ANY CHANGES
  11                     MADE WILL BE LOST. WHERE POSSIBLE USE ONLY CODE ARCHITECT
  12                     TO CHANGE THE CONTENTS OF THIS FILE
  13          GENERATED: On "May 11 2011" at "18:32:24" by Code Architect 2.06
  14          ***********************************************************************/
  15          
  16          // SFR description needs to be included
  17          #include <reg932.h>
  18          #include "uart.h"
  19          
  20          // flag that indicates if the UART is busy transmitting or not
  21          static bit mtxbusy;
  22          
  23          void delay (long x)
  24          {
  25   1      	long i = 0;
  26   1      	for (i; i<x;i++);
  27   1      }
  28          
  29          /***********************************************************************
  30          DESC:    Initializes UART for mode 1
  31                   Baudrate: 9600
  32          RETURNS: Nothing
  33          CAUTION: If interrupts are being used then EA must be set to 1
  34                   after calling this function
  35          ************************************************************************/
  36          void uart_init
  37            (
  38            void
  39            )
  40          {
  41   1        // configure UART
  42   1        // clear SMOD0
  43   1        PCON &= ~0x40;
  44   1        SCON = 0x50;
  45   1        // set or clear SMOD1
  46   1        PCON &= 0x7F;
  47   1        PCON |= (0 << 8);
  48   1        SSTAT = 0x00;
  49   1      
  50   1        // enable break detect
  51   1        AUXR1 |= 0x40;
  52   1      
  53   1        // configure baud rate generator
  54   1        BRGCON = 0x00;
  55   1        BRGR0 = 0xF0;
C51 COMPILER V6.02  UART                                                                   05/12/2016 12:39:14 PAGE 2   

  56   1        BRGR1 = 0x02;
  57   1        BRGCON = 0x03;
  58   1      
  59   1        // TxD = push-pull, RxD = input
  60   1        P1M1 &= ~0x01;
  61   1        P1M1 |= 0x02;
  62   1        P1M2 |= 0x01;
  63   1        P1M2 &= ~0x02;
  64   1      
  65   1        // initially not busy
  66   1        mtxbusy = 0;
  67   1      
  68   1        // set isr priority to 0
  69   1        IP0 |= ~0xEF;
  70   1        IP0H |= ~0xEF;
  71   1        
  72   1        // enable uart interrupt
  73   1        ES = 1;
  74   1        EA = 1;
  75   1      
  76   1      } // uart_init
  77          
  78          /***********************************************************************
  79          DESC:    UART Interrupt Service Routine
  80          RETURNS: Nothing
  81          CAUTION: uart_init must be called first
  82                   EA must be set to 1
  83          ************************************************************************/
  84          void uart_isr(void) interrupt 4 using 1
  85          {
  86   1        if (RI)
  87   1        {
  88   2          // PUT CODE THAT EXECUTES WHEN RECEIVING A BYTE HERE
  89   2      	
  90   2          // clear interrupt flag
  91   2          RI = 0;
  92   2        } // if
  93   1      
  94   1        if (TI)
  95   1        {
  96   2          // clear interrupt flag
  97   2          TI = 0;
  98   2          // no longer busy
  99   2          mtxbusy = 0;
 100   2        } // if
 101   1      
 102   1      } // uart_isr
 103          
 104          /***********************************************************************
 105          DESC:    Transmits a 8-bit value via the UART in the current mode
 106                   May result in a transmit interrupt if enabled.
 107          RETURNS: Nothing
 108          CAUTION: uart_init must be called first
 109          ************************************************************************/
 110          void uart_transmit(char c)
 111          {
 112   1        while(mtxbusy);
 113   1        mtxbusy = 1;
 114   1        SBUF = c;
 115   1      } // uart_transmit
 116          
 117          /***********************************************************************
C51 COMPILER V6.02  UART                                                                   05/12/2016 12:39:14 PAGE 3   

 118          DESC:    Gets a received 8-bit value from the UART
 119          RETURNS: Received data
 120          CAUTION: uart_init must be called first
 121          ************************************************************************/
 122          unsigned char uart_get
 123            (
 124            void
 125            )
 126          {
 127   1        return SBUF;
 128   1      } // uart_get


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    142    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
